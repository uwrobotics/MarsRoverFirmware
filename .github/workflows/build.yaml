name: build

on:
  push:
  pull_request:
  schedule: # Trigger a job on master at midnight UTC every day
    - cron: '0 0 * * *'

defaults:
  run:
    shell: bash

env:
  ARM_TOOLS_URL: https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
  ARM_TOOLS_DIR: gcc-arm-none-eabi-10-2020-q4-major

jobs:
  setup-build-matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Build Matrix Output
        id: set-matrix
        run: | # Runs script once first to ensure no silent failures
          ./scripts/build_configurations_helper.py print-ci-json
          echo "::set-output name=matrix::`./scripts/build_configurations_helper.py print-ci-json`"

  build:
    needs: setup-build-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{fromJson(needs.setup-build-matrix.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set Working Directory as Home
        run: echo "HOME=$HOME" >> $GITHUB_ENV

      - name: Update Path with Toolchain
        run: echo "${{ env.HOME }}/${{ env.ARM_TOOLS_DIR }}/bin" >> $GITHUB_PATH

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "scripts/requirements.txt"

      - name: Load Cached Arm Toolchain
        uses: actions/cache@v3
        id: toolchain-cache
        with:
          path: ${{ env.HOME }}/${{ env.ARM_TOOLS_DIR }}
          key: ${{ env.ARM_TOOLS_DIR }}

      - name: Install Arm Toolchain (if not cached)
        if: steps.toolchain-cache.outputs.cache-hit != 'true'
        run: wget $ARM_TOOLS_URL -O /tmp/arm-tools.tar.gz && tar -xvf /tmp/arm-tools.tar.gz -C ${{ env.HOME }}

      - name: Install CMake & Ninja (auto-caches)
        uses: lukka/get-cmake@latest

      - name: Print Toolchain Versions
        run: |
          echo "Make Version:"
          make --version
          echo
          echo "Mbed Tools Version:"
          mbed-tools --version
          echo
          echo "CMake Version:"
          cmake --version
          echo
          echo "Ninja Version:"
          ninja --version
          echo
          echo "ARM GCC Version:"
          arm-none-eabi-gcc --version

      - name: Run Make
        env: ${{matrix.env}}
        run: |
          CLEAN=1; make APP=${{ env.APP }} TARGET=${{ env.TARGET }}

